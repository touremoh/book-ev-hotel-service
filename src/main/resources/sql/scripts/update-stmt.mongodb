db.runCommand({
  collMod: "Hotels",
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: ["hotelName", "location", "websiteLink"],
      properties: {
        hotelName: {
          bsonType: "string",
          description: "Name of the hotel"
        },
        location: {
          bsonType: "object",
          required: ["streetAddress", "extendedAddress", "city", "zipOrPostalCode", "stateOrProvince", "country"],
          properties: {
            country: {
              bsonType: "string",
              description: "Country of the hotel"
            },
            stateOrProvince: {
              bsonType: "string",
              description: "State or province of the hotel"
            },
            zipOrPostalCode: {
              bsonType: "string",
              description: "Zip code or postal code of the hotel"
            },
            city: {
              bsonType: "string",
              description: "City of the hotel"
            },
            streetAddress: {
              bsonType: "string",
              description: "Street address of the hotel"
            },
            extendedAddress: {
              bsonType: "string",
              description: "Extended address of the hotel"
            }
          },
          description: "The address that will be shown on the invoice"
        },
        websiteLink: {
          bsonType: "string",
          description: "Link of the website. This will be used as a call to action for visitor"
        },
        amenities: {
          bsonType: "array",
          description: "List of amenities provided by the hotel"
        },
        chargingInformation: {
          bsonType: "object",
          required: ["numberOfConnectors", "availabilityTime", "accessibility", "energyCost"],
          properties: {
            numberOfConnectors: {
              bsonType: "int",
              description: "Number of the connectors open to customers"
            },
            maxPower: {
              bsonType: "int",
              description: "The maximum power expressed in kW the charging point can deliver"
            },
            availabilityTime: {
              bsonType: "string",
              description: "Tells which time of the day the charger is open"
            },
            accessibility: {
              bsonType: "string",
              description: "Tells us if the charger is open to public or to the customers"
            },
            chargingNetwork: {
              bsonType: "string",
              description: "Name of the company that the charging point. Eg. Tesla"
            },
            energyCost: {
              bsonType: "object",
              required: ["price", "priceUnit"],
              properties: {
                price: {
                  bsonType: "object",
                  required: ["amount", "currency"],
                  properties: {
                    amount: {
                      bsonType: "decimal",
                      description: "value of the amount expressed in decimal number"
                    },
                    currency: {
                      bsonType: "string",
                      description: "Currency of the energy price in string format"
                    }
                  },
                  description: "Energy price expressed in object format"
                },
                priceUnit: {
                  bsonType: "string", // i.e: kWh, min, day
                  description: "Energy cost unit expressed in string format"
                }
              },
              description: "Cost of the energy in object format"
            },
            messageForCustomer: {
              bsonType: "string",
              description: "Additional information for the customer about the charging point"
            }
          }
        },
        offers: {
          bsonType: "array",
          description: "Represent a list of all offers the hotel proposed to the customers",
          properties: {
            offer: {
              bsonType: "object",
              description: "An offer made by the hotel for the EV owner",
              properties: {
                title: {
                  bsonType: "string",
                  description: "Name of the offer"
                },
                description: {
                  bsonType: "string",
                  description: "Description of the offer"
                },
                code: {
                  bsonType: "string",
                  description: "Code of the offer"
                }
              }
            }
          }
        },
        createdAt: {
          bsonType: "date",
          description: "Date at which the record was created"
        },
        lastUpdatedAt: {
          bsonType: "date",
          description: "Date at which the record was updated"
        },
        createdBy: {
          bsonType: "objectId",
          description: "ID of the person who created the record"
        },
        lastUpdatedBy: {
          bsonType: "objectId",
          description: "ID of the person who updated the record last time"
        }
      }
    }
  }
});


db.runCommand({
   collMod: "SearchKeywords",
   validator: {
      $jsonSchema: {
         bsonType: "object",
         required: [ "key", "values" ],
         properties: {
            key: {
               bsonType: "string",
               description: "must be a string and is required"
            },
            values: {
               bsonType: ["array"],
               items: {
                  bsonType: "string",
                  description: "Must be a list of strings"
               },
               description: "Must be an array of strings and is required"
            }
         }
      }
   }
});